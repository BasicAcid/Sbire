=Présentation=

Sbire est un outil client/serveur, permettant via NRPE de maintenir les configurations, d’exécuter des commandes à distances ou de transférer des fichiers. 


* sbire.pl coté serveur (la machine à interroger / piloter)
* sbire_master.pl et sb_sergeant coté client (le poller depuis lequel on lance la commande)
			
[[https://github.com/sdouce/Sbire/raw/master/docs/img/sbire.png|px400]]


Le rôle de sbire_master est d’utiliser le protocole NRPE  pour appeler sbire à distance sur le serveur.
Le rôle de sb_sergeant est de permettre d’exécuter la même requête sur plusieurs serveurs à la fois en une seule commande, en se basant sur un fichier contenant la liste des serveurs et leur configuration (protocole à utiliser). 
Il est donc conseillé d’utiliser systématiquement sb_sergeant qui est plus simple d’utilisation que sbire_master (à qui il faut passer tous les paramètres de connexion).


<u>Les rôles de sbire sont : </u>
#Maintenir la supervision des agents NRPE (Gestion des configuration)
#Deployer de nouveaux plugins ou de nouvelles versions de ceux-ci
#Controler les niveaux de versions, de l'agent, des fichiers de configurations, des plugins. (CheckSum).
#Transferer dans les deux sens des fichiers de ou dans l'agent NRPE
#Executer des commandes

Toutes ces actions peuvent etre effectuées '''unitairement''' ou '''en masse'''.  
	
Au-dessus du protocole utilisé (NRPE), sbire peut utiliser le protocole RSA pour signer les données envoyées et reçues avec un système de clés (privées coté client, les clés publiques étant déposées sur les serveurs distants).
Ce protocole est facultatif, mais La mise en place de cette sécurité est hautement conseillée car elle permet d’assurer qu’un serveur non autorisé ne peut pas utiliser sbire. 

Via NRPE  : SBIRE a été testé sur different agent NRPE , il est fonctionnel sur des version 2.9 ou supérieur. 

<u>Les OS suivants ont été testés (PERL =>5.8):</u>
*Unix/Linux
*Aix 5/6
*HPUX 10/11
*Solaris 9/10/11
*Windows 2000/2003/2008/2012 (protocole NRPE de l'agent NSCLIENT)

=Install=


==Partie MAITRE==

<u>Pré-requis</u>

   check_nrpe 
   PERL => 5.8
	
La partie maitre sera installé par défaut dans le répertoire /usr/local/Sbire 

  ├── sbire_master.pl
  ├── sbire_rsa_keygen.pl
  ├── sb_sergeant.pl
  └──  etc
       ├── sbire_master.conf   <== Parametre sbire_master.pl 
       ├── sb_sergeant.cfg     <== Parametre sb_sergeant.pl 
       ├── server_list.txt     <== Definition de tous les hosts géré par sbire 
       ├── clientX-windows.lst <== Liste spécifiques au client X et ses serveurs sous Windows
       ├── clientX-linux.lst   <== Liste spécifiques au client X et ses serveurs sous Linux
       └── clientY.lst   <== Liste spécifiques au client Y pour tous ses serveur

==Partie ESCLAVE==

<u>Pré-requis</u>

   NRPE >= 2.9 compilé avec l'option --enable-args  
   PERL >= 5.8
	
Au préalable vous avez installé correctement l'agent NRPE sur le serveur distant à superviser.
activez dans le fichier nrpe.cfg l'option dont_blame_nrpe=1 pour accepter le passage des arguments. 

sbire.pl doit etre copié sur le serveur à superviser . 
Vous devriez le placer dans le repertoire  contenant les plugins de supervisions. (Dans notre exemple /usr/nagios/libexec/.)

Editez nrpe.cfg et rajoutez les lignes suivantes (adaptez les path à vos install ) :

   command[sbire]=/usr/local/nagios/libexec/sbire.pl /usr/local/nagios/etc/sbire.conf $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ 2>&1

Il est conseillé par la suite de séparer les commandes dans un fichier à part :

   include=/usr/local/nagios/etc/nrpe-command.cfg

Cela permettra de ne modifier que cette partie pour ajouter/effacer/modifier les plugins. 

Créer le fichier de configuration sbire.conf 


 /usr/local/nagios/etc/sbire.conf 

   SESSIONDIR = /usr/local/nagios/tmp/sbire
   ARCHIVEDIR =/usr/local/nagios/tmp/sbire/archive
   BASEDIR = /usr/local/nagios
   PUBLIC_KEY = /usr/local/nagios/etc/sbire_rsa.pub
   NRPE_SERVICE_NAME = nrpe
   USE_RSA_DC_BASED_IMPLEMENTATION=1
   USE_RSA = 0
   ALLOW_UNSECURE_UPLOAD = 1
   CONFIG_LOCKED = 0


Il est conseillé ou plus facile d'avoir un agent UNIX configurer avec xinetd plutot qu'en daemon. (PAs besoin de relancer) 

Pour l'agent nrpe lancé en demon il faudra creer une entrée sudo pour permetre a l'utilisateur de l'agent (nagios) de relancer nrpe. 
 
Ajoutez ces lignes au fichier /etc/sudoers

   echo "nagios ALL = NOPASSWD: which service" >>/etc/sudoers


Restart the NRPE server.

sudo service nrpe restart

=Configuration=


==serverlist.txt==

Une fois la partie maître et la partie Esclave installé il faut préparer le fichier server_list.txt pour les hosts interrogeables par sbire.
C'est ici que vous pourrez configurer les paramètres de communication NRPE avec vos agents (PORT / SSL / ENCRYPTION )
Ce fichiers comprendra toutes vos entrées et pourra comporter des lignes de commentaire "#"

Exemple server_list.txt :

   # Server list
   # Alias IP/Name		Protocol
   
   # Default attributes :
   USE-RSA		1
   COMPRESSION	0
   NRPE-USE-SSH	0
   NRPE-PORT	123
   
   SERVER-01 1.2.3.4	NRPE
   SERVER-02 2.3.4.5	SSH
   	USE-RSA	0


==fichier.lst==

Vous pouvez creer autant de fichier lst que vous le souhaiter , il vous servent a filtrer/ordonner/organiser vos agents. 
Par exemple separer les agents nrpe windows des linux. Ou séparer les agents d'un clients d'un autres. 

Le fichiers comporte une seule entrée pointant sur les informations du server_list.txt 



=Utilisation=

(les scripts sbire.pl et sbire_master.pl n’étant pas destinés à être lancés manuellement, il n’est question ici que de la syntaxe d’utilisation de sb_sergeant.pl)

Le premier argument est obligatoire, et peut prendre les valeurs suivantes :

·       all : la commande sera exécutée sur tous les serveurs du fichier de configuration server_list
·       <NOM> : la commande sera exécutée sur tous les serveurs dont le nom commence par <NOM>.
·       @<liste> : la commande sera exécutée sur les serveurs contenu dans le fichier <liste> (un nom de serveur par ligne)

 L’argument –c permet ensuite de définir la commande à lancer. Si aucune commande n’est définit, sb_sergeant se contente d’interroger sbire qui lui renvoie son numéro de version.
 Cela permet de vérifier que la configuration et la connexion sont correctes.

   ./sb_sergeant.pl SERVER(vide)

Renvoie le numéro de version de sbire.pl (Le Type d'OS et la valeur de USE_RSA)

   ./sb_sergeant.pl SERVER -c (vide)
Affiche la liste des commandes pouvant etre passée a sbire.
 

   ./sb_sergeant.pl SERVER -c info

Récupère la taille, version et signature du fichier distant :
	du répertoire de base 
	avec l'option (–n) d'un fichiers dans l'agent
	
	Exemple
	

    ./sb_sergeant.pl SERVER -c download

Copie le fichier distant (-n) vers le fichier local (-f) ou STDOUT

   ./sb_sergeant.pl SERVER -c upload

Copie le fichier local (-f) vers le fichier distant (-n)

   ./sb_sergeant.pl SERVER -c run -- commande

Exécute une commande à distance (--)

   ./sb_sergeant.pl SERVER -c config -- "PARAM XX"

Change la valeur d’une option dans le fichier de configuration distant sbire.conf

   ./sb_sergeant.pl SERVER -c options

Affiche la liste des paramètres distants

./sb_sergeant.pl SERVER -c restart

Relance le service NRPE (serveur distant Unix seulement pour les agents en daemon, pas xinetd)
